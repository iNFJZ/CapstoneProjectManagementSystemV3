﻿﻿﻿﻿@{
    Layout = "/Views/Shared/DevHead/_LayoutDevHead.cshtml";
    ViewData["Title"] = "Manage Registered Group Page";
}
@using Infrastructure.Entities;
@using Infrastructure.ViewModel.SupervisorViewModel;
<link rel="stylesheet" href="/css/devhead/devhead_registerGroup.css"> 
@*<link rel="stylesheet" href="/css/student/student_formChangeTopic.css">
<link rel="stylesheet" href="/css/staff/staff_manageChangTopic.css"> *@
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/css/bootstrap.min.css">
<style>
    #popup {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.5);
        display: flex;
        justify-content: center;
        align-items: center;
        transition: opacity 0.3s ease;
        z-index:1000;
        overflow : auto;
    }

    #popupContent {
        background-color: #fff;
        padding: 20px;
        border-radius: 5px;
        display: grid;
        max-height: 700px;
        overflow-y: auto;
    }

    .fade-in {
        opacity: 1;
    }

    .fade-out {
        opacity: 0;
    }

    .formRequest {
        display: flex;
        background-color: #FFFFFF;
        border-radius: 8px;
        padding: 20px;
        flex-direction: column;
    }

    .formTitle {
        font-size: 24px;
        font-weight: 600;
        color: #7470E9;
    }

    .profession-filter{
        display : flex;
        justify-content : space-between;
    }


</style>
<div class="homepage" id="manageRegisteredGroup">
    @await Html.PartialAsync("/Views/Shared/DevHead/_LayoutSidebarLeftDevHead.cshtml")
    <div class="main">
        <div class="formTopicHeader">
            <div class="formRequest">
                <p class="formTitle">Manage Registered Group</p>
            </div>
            <div class="chooseTypeRequest">
                <button onclick="ConfirmFinalGroups()" class="btn btn-info">Confirm</button>
                <button class="btn btn-info" onclick="Export()">Export</button>
                <form action="/ManageRegisterGroupRequest/ImportAssignedRegisterGroup" method="post" enctype="multipart/form-data">
                    <div class="input-group mb-3">
                      <div class="input-group-prepend">
                        <button class="btn btn-info" type="submit">Upload</button>
                      </div>
                      <div class="custom-file">
                        <input type="file" class="custom-file-input" id="inputGroupFile01" name="file" required accept=".xlsx, .xls">
                        <label class="custom-file-label" for="inputGroupFile01">Chọn tệp</label>
                      </div>
                      
                    </div>
                </form>
                <div>
                          Filter by assignment : <select class="form-select filter-assignment" onchange="save()">
                                
                        @if (ViewBag.filterIsAssigned == -1)
                        {
                            <option selected value="-1">All group</option>
                        }
                        else
                        {
                            <option value="-1">All group</option>
                        }
                         @if (ViewBag.filterIsAssigned == 1)
                        {
                            <option value="1" selected>Assigned</option>
                        }
                        else
                        {
                            <option value="1">Assigned</option>
                        }
                         @if (ViewBag.filterIsAssigned == 0)
                        {
                            <option value="0" selected>Unassigned</option>
                        }else{
                            <option value="0">Unassigned</option>
                        }
                    </select>
                      </div>
                <div>
                          Filter by professions : <i class="fa-solid fa-filter" onclick="toggle()" style="cursor : pointer; margin-left: 8px"></i>
                            <div class="status-filter-menu" style="display : none; position : absolute;top: 39%;
                                                              left: 79%;
                                                              height : 250px;
                                                              overflow : auto;
                                                              background-color: #f9f9f9;
                                                              padding: 10px;
                                                              z-index : 10;
                                                              border: 1px solid #ccc;
                                                            ">
                                <h2 style="color: #7470E9">Profession Filter</h2>
                                <ul>
                                    @foreach(Profession profession in ViewBag.devheadProfessions)
                                    {
                                        bool isChecked = false;
                                        foreach(int professionId in ViewBag.professionIds)
                                        {
                                            if(professionId == profession.ProfessionID) {
                                                isChecked = true;
                                                break;
                                            }
                                        }
                                        if (isChecked)
                                        {
                                            <li class="profession-filter"> <p> @profession.ProfessionFullName </p> <input type="checkbox" checked value="@profession.ProfessionID" name="professions"/> </li>
                                        }
                                        else
                                        {
                                            <li class="profession-filter"> <p> @profession.ProfessionFullName </p> <input type="checkbox" value="@profession.ProfessionID" name="professions"/> </li>
                                        }
                                    }
                                </ul>
                                <div style="display :flex; justify-content: center;align-items: center; padding-top: 5px;">
                                    <button class="buttonSave" onclick="save()">Save</button>
                                </div>
                            </div>
                      </div>
                  
            </div>
        </div>
        <div class="table-responsive detailFormChange-wrapper">
    <table class="table table-bordered table-hover">
        <thead>
            <tr>
                        <th style="vertical-align: inherit">Project</th>
                <th style="vertical-align: inherit">Profession</th>
                <th style="vertical-align: inherit">Speciality</th>
                        <th style="vertical-align: inherit">Member</th>
                        <th style="vertical-align: inherit" colspan="7">Supervisors</th>
                        <th style="vertical-align: inherit">Project Of Supervisor</th>
                        <th style="vertical-align: inherit">Action</th>
                        <th style="vertical-align: inherit">Assign</th>
            </tr>
        </thead>
        <tbody>
            @{
                if (ViewBag.registeredGroupRequests != null && ViewBag.registeredGroupRequests.Count > 0)
                {
                    foreach (RegisteredGroupRequest request in ViewBag.registeredGroupRequests)
                    {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        <tr  >
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            <td class="detailFormChange" id="@request.RegisteredGroup.RegisteredGroupID">@request.GroupIdea.ProjectEnglishName</td>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            <td class="detailFormChange" id="@request.RegisteredGroup.RegisteredGroupID">@request.GroupIdea.Profession.ProfessionFullName</td>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            <td class="detailFormChange" id="@request.RegisteredGroup.RegisteredGroupID">@request.GroupIdea.Specialty.SpecialtyFullName</td>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            <td class="detailFormChange" id="@request.RegisteredGroup.RegisteredGroupID">
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                @if (request.NumberOfMember < request.GroupIdea.MaxMember)
                                {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <span style="color: red;">@request.NumberOfMember / @request.GroupIdea.MaxMember</span>
                                }
                                else
                                {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <span style="color: green;">@request.NumberOfMember / @request.GroupIdea.MaxMember</span>
                                }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            </td>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            <td class="detailFormChange" id="@request.RegisteredGroup.RegisteredGroupID" colspan="7">
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                @if (request.RegisteredGroup.RegisterdGroupSupervisors.Count > 0)
                                {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <ul>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        @foreach(RegisterdGroupSupervisor registerdGroupSupervisor in request.RegisteredGroup.RegisterdGroupSupervisors)
                                        {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            <li>@registerdGroupSupervisor.Supervisor.User.UserName
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                @if(registerdGroupSupervisor.Status == 0)
                                                {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <span>(Unreplied)</span>
                                                }
                                                else if(registerdGroupSupervisor.Status == 1)
                                                {
span style="color: green;">(Accepted)</span>
                                                }
                                                else
                                                {
span style="color: red;">(Rejected)</span>
                                                }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               <br/> <span> ( @registerdGroupSupervisor.SupervisorForAssigning.TotalGroup / @registerdGroupSupervisor.SupervisorForAssigning.MaxGroup ) </span>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            </li>
                                        }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    </ul>
                                }
                                else
                                {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <span>None</span>
                                }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            </td>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            <td class="detailFormChange" id="@request.RegisteredGroup.RegisteredGroupID">
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                @if (request.RegisteredGroup.RegisterdGroupSupervisors.Count > 0)
                                {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <ul>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        @foreach(RegisterdGroupSupervisor registerdGroupSupervisor in request.RegisteredGroup.RegisterdGroupSupervisors)
                                        {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            <li>@(registerdGroupSupervisor.GroupIdeaOfSupervisor == null ? "None" : registerdGroupSupervisor.GroupIdeaOfSupervisor.ProjectEnglishName)</li>
                                        }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    </ul>
                                }
                                else
                                {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <span>None</span>
                                }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            </td>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            <td>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                @if (request.RegisteredGroup.RegisterdGroupSupervisors.Count > 0)
                                {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <ul>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        @foreach(RegisterdGroupSupervisor registerdGroupSupervisor in request.RegisteredGroup.RegisterdGroupSupervisors)
                                        {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            @if (registerdGroupSupervisor.IsAssigned == true)
                                            {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               <li> <button onclick="updateStatusRegisteredGroupSupervisor(event, @request.RegisteredGroup.RegisteredGroupID, '@registerdGroupSupervisor.Supervisor.SupervisorID', 'false')" class="btn btn-danger">Cancel @registerdGroupSupervisor.Supervisor.User.UserName</button> </li>
                                            }
                                            else if (request.Supervisor == null)
                                            {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               <li> <button onclick='updateStatusRegisteredGroupSupervisor(event, @request.RegisteredGroup.RegisteredGroupID, "@registerdGroupSupervisor.Supervisor.SupervisorID", "true")' class="btn btn-success">Accept @registerdGroupSupervisor.Supervisor.User.UserName</button> </li>
                                            }
                                        }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    </ul>
                                }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            </td>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            <td class="col-4">
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                @if (request.Supervisor != null)
                                {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    @if (request.RegisteredGroup.RegisterdGroupSupervisors.Count >= 1 && request.RegisteredGroup.RegisterdGroupSupervisors[0] != null && request.RegisteredGroup.RegisterdGroupSupervisors[0].Supervisor.SupervisorID.Equals(request.Supervisor.SupervisorID))
                                    {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        <button class="btn btn-danger" onclick="updateStatusRegisteredGroupSupervisor(event, @request.RegisteredGroup.RegisteredGroupID, '@request.RegisteredGroup.RegisterdGroupSupervisors[0].Supervisor.SupervisorID', 'false')">Cancel @request.RegisteredGroup.RegisterdGroupSupervisors[0].Supervisor.User.UserName</button>
                                    }
                                    else if (request.RegisteredGroup.RegisterdGroupSupervisors.Count >= 2 && request.RegisteredGroup.RegisterdGroupSupervisors[1] != null && request.RegisteredGroup.RegisterdGroupSupervisors[1].Supervisor.SupervisorID.Equals(request.Supervisor.SupervisorID))
                                    {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        <button onclick="updateStatusRegisteredGroupSupervisor(event, @request.RegisteredGroup.RegisteredGroupID, '@request.RegisteredGroup.RegisterdGroupSupervisors[1].Supervisor.SupervisorID', 'false')" class="btn btn-danger">Cancel @request.RegisteredGroup.RegisterdGroupSupervisors[1].Supervisor.User.UserName</button>
                                    }
                                    else
                                    {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        <button onclick="deleteRegisteredGroupSupervisor(event, @request.RegisteredGroup.RegisteredGroupID, '@request.Supervisor.SupervisorID')" class="btn btn-danger">Cancel @request.Supervisor.User.UserName</button>
                                    }
                                }
                                else
                                {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <div id="supervisorList">
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        <input class="supervisor-input form-control" type="text" placeholder="Enter Supervisor fpt.edu.vn Account" id='@(request.RegisteredGroup.RegisteredGroupID + "," + request.GroupIdea.Profession.ProfessionID)'/>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    </div>
                                }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            </td>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        </tr>
                    }
                }
                else
                {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <tr>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        <td colspan="15">
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            <h2 style="color:red; font-size: 20px">You don't have any request to register a group</h2>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        </td>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    </tr>
                }
            }
        </tbody>
    </table>
</div>
        <div id="popup" style="display: none;">
            <div id="popupContent">
                <h1>Pop-up Content</h1>
                <p>This is the content of the pop-up.</p>
            </div>
        </div>
        <div id="pagination" style="text-align: center; margin-bottom: 10px"></div>
    </div>
</div>


@*JS File*@
<script>
    document.querySelector('.custom-file-input').addEventListener('change', function (e) {
        var fileName = e.target.files[0].name;
        document.querySelector('.custom-file-label').textContent = fileName;
      });
    var page = @ViewBag.currentPage;
    var totalPage = @ViewBag.totalPage;
    var userId = '@ViewBag.UserID';
    //setURL
    function setUrlParam(key, value) {
        const urlObject = new URL(window.location.href);
        urlObject.searchParams.set(key, value);
        return urlObject.toString();
    }

    function toggle(documentId) {
        var element = document.getElementsByClassName("status-filter-menu")[0];
        if (element.style.display === "none") {
            element.style.display = "block";
        } else {
            element.style.display = "none";
        }
    }


    $(document).ready(function () {
        var connection = new signalR.HubConnectionBuilder().withUrl("/realTimeHub").build();
        connection.start().then(function () {

        }).catch(function (err) {
            console.error(err.toString());
        });
        connection.on("ReceiveMessageWithAdditionalData", function (user, message , updatedRegisterGroupId) {
            if (user == userId && message == "updateMembers" && updatedRegisterGroupId == registerGroupId) {
                Swal.fire({
                  title: 'Warning!!!',
                  text: 'Staff updated members of this group',
                  icon: 'warning',
                  confirmButtonColor: '#3085d6',
                  confirmButtonText: 'OK'
                });
                AjaxCall('/ManageRegisterGroupRequest/GetDetailRequestRegisterGroup?registeredGroupId=' + registerGroupId, "", "post").done(function(response) {
                    var request = response.request;
                    var students = response.students;
                    generateGroupDetail(request, students, registerGroupId);
                });
            }
        });
    });
var globalAssignedGroups;
    function ConfirmFinalGroups() {
        
        AjaxCall(`/ManageRegisterGroupRequest/GetAssignedGroups`, "", "post").done(function (response) {
            globalAssignedGroups = response;
            var groupList = "";
            if (response != null && response.length !== 0) {
                
                groupList += `<h1> ${response.length} groups that has been assigned  : </h1>`;
                groupList += `<table class="table table-striped"> `;
                groupList += `<thead> <tr>
                <th style="vertical-align: inherit">No</th>
                <th style="vertical-align: inherit; width : 15%">Project</th>
            <th style="vertical-align: inherit">Project of supervisor</th>
            <th style="vertical-align: inherit">Profession</th>
            <th style="vertical-align: inherit">Speciality</th>
            <th style="vertical-align: inherit">Supervisor</th>
                <th style="vertical-align: inherit;width : 2%">Confirm  <input type="checkbox" name="checkConfirmAll" checked/> </th>
        </tr> </thead>`;
                var no = 1;
                response.forEach(registerGroup => {
                    var projectName = registerGroup.groupIdea.projectEnglishName;
                    var projectOfSupervisor = "None";
                    for (var i = 0; i < registerGroup.registeredGroup.registerdGroupSupervisors.length ; i++){
                        if(registerGroup.registeredGroup.registerdGroupSupervisors[i].supervisor.user.userName === registerGroup.supervisor.user.userName && registerGroup.registeredGroup.registerdGroupSupervisors[i].groupIdeaOfSupervisor){
                            projectOfSupervisor = registerGroup.registeredGroup.registerdGroupSupervisors[i].groupIdeaOfSupervisor.projectEnglishName;
                            break;
                        }
                    }
                    groupList += `<tr> <td style="width : 1%"> ${no} </td> <td style="width : 15%"> ${projectName} </td> <td> ${projectOfSupervisor} </td> <td> ${registerGroup.groupIdea.profession.professionFullName} </td> <td> ${registerGroup.groupIdea.specialty.specialtyFullName} </td> <td> ${registerGroup.supervisor.user.userName} </td> <td style="width : 2%"> <input type="checkbox" name="assignedGroup" value='${registerGroup.registeredGroup.registeredGroupID}' checked /> </td> </tr>`;
                    no++;
                });
                groupList += `</table>`;
                groupList += `<p><button id='confirmButton' class='btn btn-info' onclick='confirmAsFinalGroups()'>Confirm <i class="fas fa-spinner fa-spin" style="display: none;"></i></button><p>`;
                
            } else {
                groupList = `<p style="margin-bottom: 0px">None of groups has been assigned</p>`;
            }
            openPopup(function (popupContent) {
                popupContent.innerHTML = ""; // clear
                popupContent.innerHTML += groupList;
                $("input[name='checkConfirmAll']").click(function () {
                    if (this.checked) {
                        $("input[name='assignedGroup']").prop("checked", true);
                    } else {
                        $("input[name='assignedGroup']").prop("checked", false);
                    }
                });
            });
        });
    }

    function confirmAsFinalGroups() {
        Swal.fire({
            title: 'Are you sure?',
            html: '',
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Continue'
        }).then((result) => {
            if (result.isConfirmed) {
                excecuteConfirmation();
            }
        });
       
    }

    function excecuteConfirmation(){
         var projectOfSupervisorMap = {};
        var message = "";
        if($('input[type="checkbox"][name="assignedGroup"]:checked').length == 0){
            Swal.fire({
                          title: 'Warning!',
                          text: 'You must select at least 1 group.',
                          icon: 'warning',
                          confirmButtonColor: '#3085d6',
                          confirmButtonText: 'OK'
                        });
            return;
        }
        var checkedValues = $('input[type="checkbox"][name="assignedGroup"]:checked').map(function () {
                        return this.value;
                    }).get().join(',');
        var splitArray = checkedValues.split(",");
        for(var i = 0 ; i < globalAssignedGroups.length ; i++){
            var registerGroup = globalAssignedGroups[i];
            var isChecked = false;
            for(var k = 0 ; k < splitArray.length ; k++ ){
                if(splitArray[k] == registerGroup.registeredGroup.registeredGroupID){
                    isChecked = true;
                }
            }
            if (!isChecked) continue;
             var projectName = registerGroup.groupIdea.projectEnglishName;
            var projectOfSupervisor = "";
            var projectOfSupervisorIsActive = true;
            for (var j = 0; j < registerGroup.registeredGroup.registerdGroupSupervisors.length ; j++){
                if(registerGroup.registeredGroup.registerdGroupSupervisors[j].supervisor.user.userName === registerGroup.supervisor.user.userName && registerGroup.registeredGroup.registerdGroupSupervisors[j].groupIdeaOfSupervisor){
                    projectOfSupervisor = registerGroup.registeredGroup.registerdGroupSupervisors[j].groupIdeaOfSupervisor.projectEnglishName;
                    projectOfSupervisorIsActive = registerGroup.registeredGroup.registerdGroupSupervisors[j].groupIdeaOfSupervisor.isActive;
                    break;
                }
            }
            if (projectOfSupervisor.length > 0) {
                if(!projectOfSupervisorIsActive){
                    message += `<div>Project ${projectOfSupervisor} is deactive , group ${projectName} will take their project  </div>`;
                    continue;
                }
                projectOfSupervisorMap[`${projectOfSupervisor}`] = `${projectOfSupervisor}` in projectOfSupervisorMap ? projectOfSupervisorMap[`${projectOfSupervisor}`] + 1 : 1;
            }
        }

        for (const key in projectOfSupervisorMap) {
          const value = projectOfSupervisorMap[key];
          if(value > 1){
              message += `<div> Project ${key} has been assigned for ${value} groups. There will be only 1 group awarded the project ${key}, and the remaining groups will take the project of that group </div>`;
          }
        }

        if (message.length > 0) {
            Swal.fire({
              title: 'Are you sure?',
              html : message,
              icon: 'warning',
              showCancelButton: true,
              confirmButtonColor: '#3085d6',
              cancelButtonColor: '#d33',
              confirmButtonText: 'Continue'
            }).then((result) => {
              if (result.isConfirmed) {
                    var confirmButton = document.querySelector('#confirmButton');
                    var loadingIcon = confirmButton.querySelector('.fa-spinner');
                    confirmButton.disabled = true;
                    loadingIcon.style.display = 'inline-block';
                    AjaxCall(`/ManageRegisterGroupRequest/ConfirmAsFinalGroups?registeredGroupIds=${checkedValues}`, "", "post").done(function (responses) {
                        generateRegisterGroupRequest();
                        if (responses) {
                            Swal.fire({
                                title: 'Success!',
                                text: 'The groups have been confirmed',
                                icon: 'success',
                                confirmButtonColor: '#3085d6',
                                confirmButtonText: 'OK'
                            });
                            popupContent.innerHTML = ""
                            const h1Element = document.createElement("h1");
                            h1Element.textContent = "The groups that have been confirmed";
                            popupContent.appendChild(h1Element);
                            const table = document.createElement("table");
                            table.classList.add("table");
                            table.classList.add("table-striped");
                            const tableHead = document.createElement("thead");
                            const tableBody = document.createElement("tbody");

                            // Create the table header row
                            const headerRow = document.createElement("tr");
                            headerRow.innerHTML = `
                                <th>Project</th>
                                <th>Group</th>
                                <th>Profession</th>
                                <th>Speciality</th>
                            `;
                            tableHead.appendChild(headerRow);

                            // Loop through the 'responses' array to create table rows
                            for (var i = 0; i < responses.length; i++) {
                                const rowData = responses[i];
                                const tableRow = document.createElement("tr");
                                tableRow.innerHTML = `
                                    <td>${rowData.projectName}</td>
                                    <td>${rowData.groupName}</td>
                                    <td>${rowData.profession.professionFullName}</td>
                                    <td>${rowData.specialty.specialtyFullName}</td>
                                `;
                                tableBody.appendChild(tableRow);
                            }

                            // Append the elements to construct the table
                            table.appendChild(tableHead);
                            table.appendChild(tableBody);
                            popupContent.appendChild(table);
                        } else {
                            Swal.fire({
                              title: 'Error!',
                              text: 'Something went wrong.',
                              icon: 'error',
                              confirmButtonColor: '#3085d6',
                              confirmButtonText: 'OK'
                            });
                        }
                    }).fail(function () {
                        Swal.fire({
                          title: 'Error!',
                          text: 'Something went wrong.',
                          icon: 'error',
                          confirmButtonColor: '#3085d6',
                          confirmButtonText: 'OK'
                        });
                    }).always(function () {
                      // Hide the loading icon
                        globalAssignedGroups = [];
                        confirmButton.disabled = false;
                      loadingIcon.style.display = 'none';
                    });
              }
            });
            return;
        }

        var confirmButton = document.querySelector('#confirmButton');
        confirmButton.disabled = true;
        var loadingIcon = confirmButton.querySelector('.fa-spinner');
        loadingIcon.style.display = 'inline-block';
        AjaxCall(`/ManageRegisterGroupRequest/ConfirmAsFinalGroups?registeredGroupIds=${checkedValues}`, "", "post").done(function (responses) {
            generateRegisterGroupRequest();
            if (responses) {
                Swal.fire({
                    title: 'Success!',
                    text: 'The groups have been confirmed',
                    icon: 'success',
                    confirmButtonColor: '#3085d6',
                    confirmButtonText: 'OK'
                });
                popupContent.innerHTML = "";
                const h1Element = document.createElement("h1");
                h1Element.textContent = "The groups that have been confirmed";
                popupContent.appendChild(h1Element);
                const table = document.createElement("table");
                table.classList.add("table");
                table.classList.add("table-striped");
                const tableHead = document.createElement("thead");
                const tableBody = document.createElement("tbody");

                // Create the table header row
                const headerRow = document.createElement("tr");
                headerRow.innerHTML = `
                        <th>Project</th>
                    <th>Group</th>
                    <th>Profession</th>
                    <th>Speciality</th>
                `;
                tableHead.appendChild(headerRow);

                // Loop through the 'responses' array to create table rows
                for (var i = 0; i < responses.length; i++) {
                    const rowData = responses[i];
                    const tableRow = document.createElement("tr");
                    tableRow.innerHTML = `
                        <td>${rowData.projectName}</td>
                        <td>${rowData.groupName}</td>
                        <td>${rowData.profession.professionFullName}</td>
                        <td>${rowData.specialty.specialtyFullName}</td>
                    `;
                    tableBody.appendChild(tableRow);
                }

                // Append the elements to construct the table
                table.appendChild(tableHead);
                table.appendChild(tableBody);
                popupContent.appendChild(table);
            } else {
                Swal.fire({
                    title: 'Error!',
                    text: 'Something went wrong.',
                    icon: 'error',
                    confirmButtonColor: '#3085d6',
                    confirmButtonText: 'OK'
                });
            }
        }).fail(function () {
            Swal.fire({
              title: 'Error!',
              text: 'Something went wrong.',
              icon: 'error',
              confirmButtonColor: '#3085d6',
              confirmButtonText: 'OK'
            });
        }).always(function () {
          // Hide the loading icon
            globalAssignedGroups = [];
            confirmButton.disabled = false;
          loadingIcon.style.display = 'none';
        });
    }

function Export(){
    window.location.href = `/ManageRegisterGroupRequest/ExportRegisterGroupRequests`;
}

function save(){
        var professions = [];

        $('input[name="professions"]:checked').each(function () {
            professions.push($(this).val());
        });
        var filterByAssignmentStatus = document.getElementsByClassName("filter-assignment")[0].value;
        const urlObject = new URL(window.location.href);
        urlObject.searchParams.set("page", 1);
        urlObject.searchParams.set("professions", professions.join(','));
        urlObject.searchParams.set("filterIsAssigned", filterByAssignmentStatus);
        window.location.href = urlObject.toString();
}
function generateRegisterGroupRequest() {
      var professions = [];

        $('input[name="professions"]:checked').each(function () {
            professions.push($(this).val());
        });
        var filterByAssignmentStatus = document.getElementsByClassName("filter-assignment")[0].value;
        var rawProfessions = professions.join(',');
      AjaxCall(`/ManageRegisterGroupRequest/GetReigsterGroupRequests?page=${page}&professions=${rawProfessions}&filterIsAssigned=${filterByAssignmentStatus}`, "", "post").done(function(response) { 
        var totalPage = response.totalPage;
        var currentPage = response.currentPage;
        var registeredGroupRequests = response.registeredGroupRequests; 
        var table = document.createElement('table');
        table.classList.add('table', 'table-bordered', 'table-hover');

        var thead = document.createElement('thead');
        var tr = document.createElement('tr');
        var thTitles = ['Project', 'Profession', 'Speciality', 'Member', 'Supervisors', 'Project Of Supervisor', 'Action', 'Assign'];

        thTitles.forEach(function (title) {
          var th = document.createElement('th');
          if(title == 'Supervisors'){
              th.colSpan = 7;
          }
          th.textContent = title;
          tr.appendChild(th);
        });

        thead.appendChild(tr);
        table.appendChild(thead);

        var tbody = document.createElement('tbody');

        if (registeredGroupRequests != null && registeredGroupRequests.length > 0) {
          registeredGroupRequests.forEach(function (request) {
            var tr = document.createElement('tr');
            

            var tdContents = [
              request.groupIdea.projectEnglishName,
              request.groupIdea.profession.professionFullName,
              request.groupIdea.specialty.specialtyFullName
            ];

            tdContents.forEach(function (content) {
              var td = document.createElement('td');
              td.classList.add('detailFormChange');
              td.id = request.registeredGroup.registeredGroupID;
              td.textContent = content;
              tr.appendChild(td);
            });

            var tdNumberOfMembers = document.createElement('td');
            tdNumberOfMembers.classList.add('detailFormChange');
            tdNumberOfMembers.id = request.registeredGroup.registeredGroupID;
            if (request.numberOfMember < request.groupIdea.maxMember) {
              tdNumberOfMembers.innerHTML = '<span style="color: red;">' + request.numberOfMember + ' / ' + request.groupIdea.maxMember + '</span>';
            } else {
              tdNumberOfMembers.innerHTML = '<span style="color: green;">' + request.numberOfMember + ' / ' + request.groupIdea.maxMember + '</span>';
            }
            tr.appendChild(tdNumberOfMembers);

            var tdSupervisorWishes = document.createElement('td');
            tdSupervisorWishes.classList.add('detailFormChange');
              tdSupervisorWishes.colSpan = 7;
            tdSupervisorWishes.id = request.registeredGroup.registeredGroupID;
            if (request.registeredGroup.registerdGroupSupervisors.length > 0) {
              var ul = document.createElement('ul');
              request.registeredGroup.registerdGroupSupervisors.forEach(function (registerdGroupSupervisor) {
                var li = document.createElement('li');
                li.textContent = registerdGroupSupervisor.supervisor.user.userName;
                if (registerdGroupSupervisor.status == 0) {
                  var span = document.createElement('span');
                  span.textContent = '(Unreplied)';
                  li.appendChild(span);
                } else if (registerdGroupSupervisor.status == 1) {
                  var span = document.createElement('span');
                  span.style.color = 'green';
                  span.textContent = '(Accepted)';
                  li.appendChild(span);
                } else {
                  var span = document.createElement('span');
                  span.style.color = 'red';
                  span.textContent = '(Rejected)';
                  li.appendChild(span);
                }
                li.innerHTML += `<br/> <span> ( ${registerdGroupSupervisor.supervisorForAssigning.totalGroup} / ${registerdGroupSupervisor.supervisorForAssigning.maxGroup} ) </span>`;
                ul.appendChild(li);
              });
              tdSupervisorWishes.appendChild(ul);
            } else {
              var span = document.createElement('span');
              span.textContent = 'None';
              tdSupervisorWishes.appendChild(span);
            }
            tr.appendChild(tdSupervisorWishes);

            var tdProjectOfSupervisor = document.createElement('td');
            tdProjectOfSupervisor.classList.add('detailFormChange');
            tdProjectOfSupervisor.id = request.registeredGroup.registeredGroupID;
            if (request.registeredGroup.registerdGroupSupervisors.length > 0) {
              var ul = document.createElement('ul');
              request.registeredGroup.registerdGroupSupervisors.forEach(function (registerdGroupSupervisor) {
                var li = document.createElement('li');
                li.textContent = registerdGroupSupervisor.groupIdeaOfSupervisor == null ? 'None' : registerdGroupSupervisor.groupIdeaOfSupervisor.projectEnglishName;
                ul.appendChild(li);
              });
              tdProjectOfSupervisor.appendChild(ul);
            } else {
              var span = document.createElement('span');
              span.textContent = 'None';
              tdProjectOfSupervisor.appendChild(span);
            }
            tr.appendChild(tdProjectOfSupervisor);

            var tdAction = document.createElement('td');
            if (request.registeredGroup.registerdGroupSupervisors.length > 0) {
              var ul = document.createElement('ul');
              request.registeredGroup.registerdGroupSupervisors.forEach(function (registerdGroupSupervisor) {
                if (registerdGroupSupervisor.isAssigned) {
                  var li = document.createElement('li');
                  var userName = registerdGroupSupervisor.supervisor.user.userName;
                  var button = `<button class="btn btn-danger"   onclick="updateStatusRegisteredGroupSupervisor(event, ${request.registeredGroup.registeredGroupID}, '${registerdGroupSupervisor.supervisor.supervisorID}', false);">Cancel ${userName}</button>`;
                  li.innerHTML = button;
                  ul.appendChild(li);
                } else if (request.supervisor == null) {
                  var li = document.createElement('li');
                 var userName = registerdGroupSupervisor.supervisor.user.userName;
                 var button = `<button onclick="updateStatusRegisteredGroupSupervisor(event, ${request.registeredGroup.registeredGroupID}, '${registerdGroupSupervisor.supervisor.supervisorID}', true);" class="btn btn-success">Accept ${userName}</button>`;

                  li.innerHTML = button;
                  ul.appendChild(li);
                }
              });
              tdAction.appendChild(ul);
            }
            tr.appendChild(tdAction);

            var tdSupervisor = document.createElement('td');
            tdSupervisor.colSpan = 8;
            if (request.supervisor != null) {

              if (request.registeredGroup.registerdGroupSupervisors.length >= 1 && request.registeredGroup.registerdGroupSupervisors[0] != null && request.registeredGroup.registerdGroupSupervisors[0].supervisor.supervisorID === request.supervisor.supervisorID) {
                var cancelButton = '<button class="btn btn-danger" onclick="updateStatusRegisteredGroupSupervisor(event, ' +
                  request.registeredGroup.registeredGroupID + ', ' + "'" +
                  request.registeredGroup.registerdGroupSupervisors[0].supervisor.supervisorID + "'" + ', false)">' +
                  `Cancel ${request.registeredGroup.registerdGroupSupervisors[0].supervisor.user.userName}</button>`;
                tdSupervisor.innerHTML = cancelButton;
              } else if (request.registeredGroup.registerdGroupSupervisors.length >= 2 && request.registeredGroup.registerdGroupSupervisors[1] != null && request.registeredGroup.registerdGroupSupervisors[1].supervisor.supervisorID === request.supervisor.supervisorID) {
                var cancelButton = '<button class="btn btn-danger" onclick="updateStatusRegisteredGroupSupervisor(event, ' +
                  request.registeredGroup.registeredGroupID + ', ' + "'" +
                  request.registeredGroup.registerdGroupSupervisors[1].supervisor.supervisorID + "'" + ', false)">' +
                  `Cancel ${request.registeredGroup.registerdGroupSupervisors[1].supervisor.user.userName}</button>`;
                tdSupervisor.innerHTML = cancelButton;
              } else {
                var cancelButton = '<button class="btn btn-danger" onclick="deleteRegisteredGroupSupervisor(event, ' +
                  request.registeredGroup.registeredGroupID + ', ' + "'" +
                  request.supervisor.supervisorID + "'" + ')">' +
                  `Cancel ${request.supervisor.user.userName}</button>`;
                tdSupervisor.innerHTML = cancelButton;
              }
            } else {
              var div = document.createElement('div');
              div.id = 'supervisorList';
              var input = document.createElement('input');
              input.classList.add('supervisor-input', 'form-control');
              input.type = 'text';
              input.placeholder = 'Enter Supervisor fpt.edu.vn Account';
              input.id = request.registeredGroup.registeredGroupID + ',' + request.groupIdea.profession.professionID;
              div.appendChild(input);
              tdSupervisor.appendChild(div);
            }
            tr.appendChild(tdSupervisor);

            tbody.appendChild(tr);
          });
        } else {
          var tr = document.createElement('tr');
          var td = document.createElement('td');
          td.colSpan = 15;
          var h2 = document.createElement('h2');
          h2.style.color = 'red';
          h2.textContent = "You don't have any request to register a group";
          td.appendChild(h2);
          tr.appendChild(td);
          tbody.appendChild(tr);
        }
        table.appendChild(tbody);
            $(".detailFormChange-wrapper").html(table.outerHTML);
            setAutocompleteForSupervisorInput();
            pagination(page, totalPage, 2);
        
      }).fail(function() {
       /* Swal.fire({
          title: 'Error!',
          text: 'Something went wrong.',
          icon: 'error',
          confirmButtonColor: '#3085d6',
          confirmButtonText: 'OK'
        }); */
      });
}

    $(document).ready(function() {
        setAutocompleteForSupervisorInput();
    });

function setAutocompleteForSupervisorInput() {
    var professionSupervisors = [];
        $(".supervisor-input").each(function(index, element) {
            $(element).click(function(event) {
                event.stopPropagation();
          });
            var ids = element.id.split(",");
            var professionId = ids[1];
            var registerGroupId = ids[0];
            var exsistedProfessionSupervisors = professionSupervisors.find(function(professionSupervisor) {
                return professionSupervisor.professionId == professionId;
            });
            if(exsistedProfessionSupervisors){
                var supervisorNames = exsistedProfessionSupervisors.supervisors.map(supervisor => {
                    return supervisor.username + "-" + supervisor.totalGroup + "/" + supervisor.maxGroup;
                });
                var supervisors = exsistedProfessionSupervisors.supervisors;
                element.autocomplete({
                    source: supervisorNames,
                    select: function(event, ui) {
                      var selectedSupervisor = supervisors.find(function(supervisor) {
                        return supervisor.username === ui.item.value.split("-")[0];
                      });

                      if (selectedSupervisor) {
                          addRegisteredGroupSupervisor(registerGroupId, selectedSupervisor.supervisorId, selectedSupervisor.totalGroup, selectedSupervisor.maxGroup);
                      }
                    }
                  });
            }else{
                AjaxCall(`/ManageRegisterGroupRequest/GetSupervisorsForAssigning?registeredGroupId=${registerGroupId}`, "", "post").done(function(response) { 
                    var supervisors = response.supervisors;
                    var group = response.group;
                    professionSupervisors.push({
                        professionId : professionId ,
                        supervisors : supervisors
                    })
                    var supervisorNames = supervisors.map(supervisor => {
                        return supervisor.username + "-" + supervisor.totalGroup + "/" + supervisor.maxGroup;
                    });
                    $(element).autocomplete({
                        source: supervisorNames,
                        select: function(event, ui) {
                          var selectedSupervisor = supervisors.find(function(supervisor) {
                            return supervisor.username === ui.item.value.split("-")[0];
                          });
                          if (selectedSupervisor) {
                              addRegisteredGroupSupervisor(registerGroupId, selectedSupervisor.supervisorId, selectedSupervisor.totalGroup, selectedSupervisor.maxGroup);
                          }
                        }
                    });
                });
            }
        });
}

    function updateStatusRegisteredGroupSupervisor(event, registerGroupId, supervisorId, isAssigned) {
        var professions = [];

        $('input[name="professions"]:checked').each(function () {
            professions.push($(this).val());
        });
        var filterByAssignmentStatus = document.getElementsByClassName("filter-assignment")[0].value;
        window.location.href = `/ManageRegisterGroupRequest/AssignRegisteredSupervisorForRegisteredGroup?registerGroupId=${registerGroupId}&supervisorId=${supervisorId}&isAssigned=${isAssigned}&page=${page}&professions=${professions.join(',')}&filterIsAssigned=${filterByAssignmentStatus}`;
    }

    function addRegisteredGroupSupervisor(registerGroupId, supervisorId, totalGroup, maxGroup) {
        var isWarning = totalGroup >= maxGroup;
        if (isWarning) {
            Swal.fire({
              title: 'Are you sure?',
              text: "This supervisor has total group greater than max group , are you still want to assign him/her?",
              icon: 'warning',
              showCancelButton: true,
              confirmButtonColor: '#3085d6',
              cancelButtonColor: '#d33',
              confirmButtonText: 'Assign'
            }).then((result) => {
              if (result.isConfirmed) {
                AjaxCall(`/ManageRegisterGroupRequest/AssignSupervisorForRegisteredGroup?registerGroupId=${registerGroupId}&supervisorId=${supervisorId}`, "", "post").done(function (status) {
                    Swal.fire({
                      title: `${supervisorId} has been assigned !`,
                      text: `${supervisorId} has been assigned !`,
                      icon: 'success',
                      confirmButtonColor: '#3085d6',
                      confirmButtonText: 'OK'
                    });
                    generateRegisterGroupRequest(); // reload the page
                }).fail(function () {
                    Swal.fire({
                      title: 'Error!',
                      text: 'Something went wrong.',
                      icon: 'error',
                      confirmButtonColor: '#3085d6',
                      confirmButtonText: 'OK'
                    });
                });
              }
            });
        }else {
            AjaxCall(`/ManageRegisterGroupRequest/AssignSupervisorForRegisteredGroup?registerGroupId=${registerGroupId}&supervisorId=${supervisorId}`, "", "post").done(function (status) {
                Swal.fire({
                      title: `${supervisorId} has been assigned !`,
                      text: `${supervisorId} has been assigned !`,
                      icon: 'success',
                      confirmButtonColor: '#3085d6',
                      confirmButtonText: 'OK'
                    });   
                generateRegisterGroupRequest(); // reload the page
                }).fail(function () {
                    Swal.fire({
                      title: 'Error!',
                      text: 'Something went wrong.',
                      icon: 'error',
                      confirmButtonColor: '#3085d6',
                      confirmButtonText: 'OK'
                    });
                });
        }
    }

    function deleteRegisteredGroupSupervisor(event, registerGroupId, supervisorId) {
        AjaxCall(`/ManageRegisterGroupRequest/DeleteRegisteredGroupSupervisor?registerGroupId=${registerGroupId}&supervisorId=${supervisorId}`, "", "post").done(function(status) { 
                Swal.fire({
                      title: `${supervisorId} has been un-assigned !`,
                      text: `${supervisorId} has been un-assigned !`,
                      icon: 'success',
                      confirmButtonColor: '#3085d6',
                      confirmButtonText: 'OK'
                    });
                generateRegisterGroupRequest(); // reload the page
            }).fail(function (){
                Swal.fire({
                  title: 'Error!',
                  text: 'Something went wrong.',
                  icon: 'error',
                  confirmButtonColor: '#3085d6',
                  confirmButtonText: 'OK'
                });
            });
    }
    var addedStudents = [];
    var deletedStudents = [];
    var registerGroupId = -1;
    function addMember(registerGroupId) {
        var addedStudentIds = addedStudents.join(",");
        AjaxCall(`/ManageRegisterGroupRequest/AddMember?addedStudentIds=${addedStudentIds}&registeredGroupId=${registerGroupId}`, "", "post").done(function (status) {
            Swal.fire({
                      title: `The students have been added !`,
                      text: `The ${addedStudents.length} students have been added !`,
                      icon: 'success',
                      confirmButtonColor: '#3085d6',
                      confirmButtonText: 'OK'
                    });
            AjaxCall('/ManageRegisterGroupRequest/GetDetailRequestRegisterGroup?registeredGroupId=' + registerGroupId, "", "post").done(function (response) {
                var request = response.request;
                var students = response.students;
                addedStudents = [];
                generateGroupDetail(request, students, registerGroupId);
                generateRegisterGroupRequest();
            }); // Remove extra closing parenthesis here
        }).fail(function () {
            Swal.fire({
              title: 'Error!',
              text: 'Something went wrong.',
              icon: 'error',
              confirmButtonColor: '#3085d6',
              confirmButtonText: 'OK'
            });
            addedStudents = [];
        });
    }
var globalNumberOfMember = 0;
    function deleteMember(registerGroupId) {
        if (globalNumberOfMember == deletedStudents.length) {
        Swal.fire({
            title: 'Are you sure?',
            text: 'You can not delete all students of group.You would rather to delete group?',
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Delete group'
        }).then((result) => {
            if (result.isConfirmed) {
                window.location.href = `/ManageRegisterGroupRequest/DeleteRegisteredGroup?registeredGroupId=${registerGroupId}`;
            }
        });
        return;
    }
        var deletedStudentIds = deletedStudents.join(",");
        AjaxCall(`/ManageRegisterGroupRequest/DeleteMember?deletedStudentIds=${deletedStudentIds}&registeredGroupId=${registerGroupId}`, "", "post").done(function (status) {
            Swal.fire({
                      title: `The students have been deleted !`,
                      text: `The ${deletedStudents.length} students have been deleted !`,
                      icon: 'success',
                      confirmButtonColor: '#3085d6',
                      confirmButtonText: 'OK'
                    });
            AjaxCall('/ManageRegisterGroupRequest/GetDetailRequestRegisterGroup?registeredGroupId=' + registerGroupId, "", "post").done(function (response) {
                var request = response.request;
                var students = response.students;
                deletedStudents = [];
                generateGroupDetail(request, students, registerGroupId);
                generateRegisterGroupRequest();
            })
        }).fail(function () {
            Swal.fire({
              title: 'Error!',
              text: 'Something went wrong.',
              icon: 'error',
              confirmButtonColor: '#3085d6',
              confirmButtonText: 'OK'
            });
            deletedStudents = [];
        });
    }


    function deleteGroup(registerGroupId) {
         Swal.fire({
              title: 'Are you sure?',
              text: "Do you want to delete this group?",
              icon: 'warning',
              showCancelButton: true,
              confirmButtonColor: '#3085d6',
              cancelButtonColor: '#d33',
              confirmButtonText: 'Delete Group'
            }).then((result) => {
              if (result.isConfirmed) {
                window.location.href = `/ManageRegisterGroupRequest/DeleteRegisteredGroup?registeredGroupId=${registerGroupId}`;
              }
            });
    }


    //Paging
    function pagination(page, totalPage, gaps) {
        let pagingResult = "";
        let pageIndex = page;

        if (totalPage <= 1) {
            return;
        }
        pagingResult += `<a href="${setUrlParam("page", 1)}"  style="margin-right: 10px; padding: 10px; color: #7470E9;background-color: rgba(116, 112, 233, 0.2);
                                                                border-radius: 8px;">First</a> `;

        for (let i = pageIndex - gaps; i < pageIndex; i++) {
            if (i > 0)
                pagingResult += `<a href="${setUrlParam("page", i)}" style="margin-right: 10px; padding: 10px; color: #7470E9;background-color: rgba(116, 112, 233, 0.2);
                                                                border-radius: 8px;">${i}</a>`;
        }

        pagingResult += `<a style="margin-right: 10px; padding: 10px; color: #7470E9; font-weight: bold; background-color: rgba(116, 112, 233, 0.2);
                                                                border-radius: 8px;">${pageIndex}</a>`;

        for (let i = pageIndex + 1; i <= pageIndex + gaps; i++) {
            if (i <= totalPage)
                pagingResult += `<a href="${setUrlParam("page", i)}" style="margin-right: 10px; padding: 10px; color: #7470E9;background-color: rgba(116, 112, 233, 0.2);
                                                                border-radius: 8px;">${i}</a>`;
        }
        pagingResult += ` <a href="${setUrlParam("page", totalPage)}" style="margin-right: 10px; padding: 10px; color: #7470E9;background-color: rgba(116, 112, 233, 0.2);
                                                                border-radius: 8px;">Last</a>`;

        document.getElementById("pagination").innerHTML = `${pagingResult}`;
    }

    pagination(@ViewBag.currentPage, @ViewBag.totalPage, 2);

    function openPopup(setUpPopupContent) {
        var popup = document.getElementById("popup");
        var popupContent = document.getElementById("popupContent");
        setUpPopupContent(popupContent);
        // Fade in the popup
        popup.classList.add("fade-in");
        popup.style.display = "flex";

        // Click outside the popup hides it
        window.addEventListener("click", function (event) {
            if (event.target === popup) {
                popup.classList.remove("fade-in");
                popup.classList.add("fade-out");
                addedStudents = [];
                deletedStudents = [];
                // Hide the popup after fade-out animation completes
                setTimeout(function () {
                    popup.style.display = "none";
                    popup.classList.remove("fade-out");
                }, 300);
            }
        });
    }

    //ajax call
    function AjaxCall(url, data, type) {
        return $.ajax({
            url: url,
            dataType: "json",
            data: data,
            type,
            contentType: "application/json; charset=utf-8",
        });
    }

    document.addEventListener("change", function (event) {
        var checkbox = event.target;
        if (checkbox.type === "checkbox" && checkbox.name === "unGroupedStudents") {
            var studentId = checkbox.value;
            if (checkbox.checked) {
                // Thêm sinh viên vào danh sách sinh viên đã chọn
                addedStudents.push(studentId);
            } else {
                // Xóa sinh viên khỏi danh sách sinh viên đã chọn
                var index = addedStudents.indexOf(studentId);
                if (index !== -1) {
                    addedStudents.splice(index, 1);
                }
            }
            if (addedStudents.length != 0) {
                $("#addStudentsButton").html(`<button onclick='addMember(${registerGroupId})'>Add ${addedStudents.length} ${addedStudents.length > 2 ? 'Students' : 'Student'}</button>`);
            } else {
                $("#addStudentsButton").html("");
            }
        } else if (checkbox.type === "checkbox" && checkbox.name === "groupedStudents") {
            var studentId = checkbox.value;
            if (checkbox.checked) {
                // Thêm sinh viên vào danh sách sinh viên đã chọn
                deletedStudents.push(studentId);
            } else {
                // Xóa sinh viên khỏi danh sách sinh viên đã chọn
                var index = deletedStudents.indexOf(studentId);
                if (index !== -1) {
                    deletedStudents.splice(index, 1);
                }
            }
            if (deletedStudents.length != 0) {
                $("#deleteStudentsButton").html(`<button onclick='deleteMember(${registerGroupId})'>Delete ${deletedStudents.length} ${deletedStudents.length > 2 ? 'Students' : 'Student'}</button>`);
            } else {
                $("#deleteStudentsButton").html("");
            }
        };
    });

    function generateGroupDetail(request, students, registerGroupId) {
        // Clear previous content
        var studentList = '';
        globalNumberOfMember = request.numberOfMember;
        // Generate student list items
        
        students?.forEach((student) => {
            var listItem = '<li>' +
                '<strong>Fpt Email: </strong> ' + student.user.fptEmail + ` <input type='checkbox' name='unGroupedStudents' value='${student.studentID}' /> ` +
                '<strong>Profession: </strong> ' + student.profession.professionFullName +
                '<strong>Speciality: </strong> ' + student.specialty.specialtyFullName +
                '</li>';
                  studentList += listItem;
              });

        openPopup(function (popupContent) {
            popupContent.innerHTML = ""; // clear
            var membersList = '';
            $.each(request.members, function (index, member) {
                membersList += "<li style='display : flex;justify-content: space-between;'> <span>" + member.fptEmail + `(Member) </span>  <input type='checkbox' name='groupedStudents' value='${member.userID}' /> </li>`;
            });
            popupContent.innerHTML += `<h2>Group Information</h2>
                      <div class='group-info'>
                        <div class='info-row'>
                           <button type="button" class="btn btn-danger" onClick='deleteGroup(${registerGroupId})'>Delete Group</button>
                        </div>
                        <div class='info-row'>
                          <span class='info-label'>Project English Name:</span>
                          <span id='projectEnglishName' class='info-value'>${request.groupIdea.projectEnglishName}</span>
                        </div>
                        <div class='info-row'>
                          <span class='info-label'>Project Vietnamese Name:</span>
                          <span id='projectVietnameseName' class='info-value'>${request.groupIdea.projectVietNameseName}</span>
                        </div>
                        <div class='info-row'>
                          <span class='info-label'>Profession:</span>
                          <span id='profession' class='info-value'>${request.groupIdea.profession.professionFullName}</span>
                        </div>
                        <div class='info-row'>
                          <span class='info-label'>Speciality:</span>
                          <span id='speciality' class='info-value'>${request.groupIdea.specialty.specialtyFullName}</span>
                        </div>
                        <div class='info-row'>
                          <span class='info-label'>Leader:</span>
                          <span id='leader' class='info-value'>${request.leader === null || request.leader === undefined ? "None" : request.leader.fptEmail + ' (Leader)'}</span>

                          ${request.leader === null || request.leader === undefined ? '' : `<span style="display : flex;align-items: center;"> <input type='checkbox' name='groupedStudents' value='${request.leader.userID}'  /> </span>`}
                        </div>
                        <div class='info-row'>
                          <span class='info-label'>Members:</span>
                          <ul id='members' class='member-list info-value'>${membersList}</ul>
                           <span id='deleteStudentsButton'></span>
                            <span id='addStudentsButton'></span>
                        </div>
                        <div class='info-row1'>
                          <span class='info-label'>Ungrouped Students:</span>
                          <ul id='ungrouped-students' class='member-list'>${studentList}</ul>
                        </div>
                      </div>`;
            ;
        });
    }
    // Prevent clicks inside the popup from triggering the outside click event
    popupContent.addEventListener("click", function (event) {
        event.stopPropagation();
      });
      $(document).ready(function () {
      $('body').on('click', '.detailFormChange', function () {
          var id = $(this).attr("id");
          registerGroupId = id;  // save to global variable 
          AjaxCall('/ManageRegisterGroupRequest/GetDetailRequestRegisterGroup?registeredGroupId=' + id, "", "post").done(function(response) { 
              var request = response.request;
              var students = response.students;
              generateGroupDetail(request, students , id);
              })  
          });
      });
        
</script>
<!-- jQuery UI -->
<link rel="stylesheet" href="https://code.jquery.com/ui/1.13.0/themes/base/jquery-ui.css">
<script src="https://code.jquery.com/ui/1.13.0/jquery-ui.js"></script>














